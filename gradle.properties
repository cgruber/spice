# Gradle settings for local development. CI uses the other gradle.properties.* files in this dir.
# If you add or modify something here, consider whether a related change should be made on CI.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process. Note that when running with
# org.gradle.daemon=false, for instance on Kochiku, the GradleDaemon process is still
# started with these arguments. It just doesn't live on after the build completes.
#
# We use the standard G1GC from JDK 11. Here are the various options used for the JVM:
# (source : https://docs.oracle.com/en/java/javase/11/gctuning/index.html)
# -XX:G1HeapRegionSize: the size of the G1 Regions. It must be a power of 2 between 1M and 32M.
#   At most there should be 2048 regions. Setting this value sets an upperbound to Xmx and helps
#   the JVM to estimate the peak size of the heap.
#   1M  --> Xmx = 2G       2M --> Xmx = 4G
#   4M  --> Xmx = 8G       8M --> Xmx = 16G
#   16M --> Xmx = 32G     32M --> Xmx = 64G
# -XX:MinHeapFreeRatio and -XX:MaxHeapFreeRatio: min and max ratio of tolerated free / unused heap.
#  If the amount of unused heap is not in this ratio, a GC is triggered. Keeping the range low will
#  expand and shrink the heap on demand.
# -XX:GCTimeLimit=20: The upper limit on the amount of time spent in garbage collection in percent of
#  total time (default is 98).
# -XX:+UseCompressedOops: Use 32 bit Object Pointers on 64 bit machines.
# The option provides better performance of the JVM. Use only if xmx < 32GB.

org.gradle.jvmargs=-XX:+UseCompressedOops -XX:G1HeapRegionSize=16M -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeLimit=20 -Xmx17g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Djava.awt.headless=true

kotlin.daemon.jvmargs=-Xmx5g

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# Use the gradle daemon
org.gradle.daemon=true

# Enable the Gradle Build Cache
org.gradle.caching=true

# Only configure modules required for the current build
org.gradle.configureondemand=true

# Enable File System Watching
org.gradle.vfs.watch=true

# Prevent uploads of .512 check sum files to artifactory (This is for :in-app-payments)
systemProp.org.gradle.internal.publish.checksums.insecure=true

# Prevents lint from growing a head.
systemProp.java.awt.headless=true

# Informs Gradle scripts that this is a local build.
systemProp.ci=false

# Use Android X instead of the support library.
android.useAndroidX=true

# Recompile dependencies that use the support library to use Android X instead.
# Needed for external libraries that still use the support library (e.g. sticky headers)
android.enableJetifier=true

# Tell Jetifier to ignore certain jars, by regex
# bcprov: Needed for the latest Robolectric version, otherwise Jetifier will be mad https://github.com/robolectric/robolectric/issues/6521
# common: needed for Paparazzi
# moshi: moshi 1.13.0+ is a multi-jar, which confuses jetifier https://github.com/square/moshi/issues/1454#issuecomment-989981705
android.jetifier.ignorelist=bcprov,common-\\d{2}\\.\\d+\\.\\d+\\.jar,moshi

# Suppress experimental option warnings during configuration (including this one!)
android.suppressUnsupportedOptionWarnings=android.dexingNumberOfBuckets,android.suppressUnsupportedOptionWarnings,android.nonTransitiveRClass,android.enableAppCompileTimeRClass

# Enable rudimentary R class namespacing where each module
# only contains references to the resources it declares instead
# of declarations plus all transitive dependency references.
android.nonTransitiveRClass=true

# https://issuetracker.google.com/issues/110374966
android.dexingNumberOfBuckets=1

# Package resources in application modules just as library modules do.
android.enableAppCompileTimeRClass=true

# Turn on incremental annotation processing with KAPT
# https://blog.jetbrains.com/kotlin/2019/04/kotlin-1-3-30-released/
kapt.incremental.apt=true

# Use Gradle's worker API for KAPT.
# https://blog.jetbrains.com/kotlin/2019/04/kotlin-1-3-30-released/
kapt.use.worker.api=true

# Turn on compile avoidance for annotation processors
# https://blog.jetbrains.com/kotlin/2019/04/kotlin-1-3-30-released/
kapt.include.compile.classpath=false

# Don't recompile Kotlin code if changes in Java don't have an effect.
# https://blog.jetbrains.com/kotlin/2018/01/kotlin-1-2-20-is-out/
kotlin.incremental.usePreciseJavaTracking=true

# Do not turn on. By default we use the Kotlin daemon and it performs better than running Kotlin
# compilations in-process.
#kotlin.compiler.execution.strategy="in-process"

# Enable logging from the kotlin daemon.
# https://jira.sqprod.co/browse/MDX-2626
# Some builds randomly report issues of connections between the gradle daemon and the kotlin
# compiler daemon.
kotlin.daemon.debug.log=true

# Disable a few buildFeatures by default in AGP 4+
# Individual modules can enable features as needed individually:
# e.g.: android.buildFeatures.buildconfig true
# Names of default options for both libs, apps and common build features
# are available in https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/build-system/gradle-core/src/main/java/com/android/build/gradle/options/BooleanOption.kt
# Listed in https://android.googlesource.com/platform/tools/base/+/refs/heads/mirror-goog-studio-master-dev/build-system/gradle-api/src/main/java/com/android/build/api/dsl/BuildFeatures.kt
android.defaults.buildfeatures.buildconfig=false
android.defaults.buildfeatures.aidl=false
android.defaults.buildfeatures.renderScript=false
android.defaults.buildfeatures.compose=false
android.defaults.buildfeatures.resValues=false
android.defaults.buildfeatures.viewBinding=false
android.defaults.buildfeatures.shaders=false
android.defaults.buildfeatures.prefab=false

# Options for libraries modules
# Listed in https://android.googlesource.com/platform/tools/base/+/refs/heads/mirror-goog-studio-master-dev/build-system/gradle-api/src/main/java/com/android/build/api/dsl/LibraryBuildFeatures.kt
android.library.defaults.buildfeatures.androidresources=false
android.defaults.buildfeatures.dataBinding=false
android.defaults.buildfeatures.mlModelBinding=false
android.defaults.buildfeatures.prefabPublishing=false

mavenRepoUrl=https://maven.global.square

# For faster builds locally we only bundle x86 (for emulators) and ARM 64 Bit (most physical devices these days).
square.debugAbiFilter=x86,arm64-v8a

# Dependency Analysis Gradle Plugin
dependency.analysis.autoapply=false
dependency.analysis.test.analysis=false

# This is required temporarily as the default convention plugin behavior when not set is to
# add the common:profileable:public dependency which adds disabled components. Instead we just don't
# want that dependency at all. Once the convention plugin is released again we can undo this change.
square.enableProfiling=false

# Plugin versions
square.shadowVersion=7.1.2
square.paparazziVersion=1.0.0-internal03

square.registerPluginsVersion.consumer=1.41.1
square.registerPluginsVersion.producer=1.41.1
